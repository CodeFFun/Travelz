// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id          String   @id @default(uuid())
  user_email       String   @unique
  user_name        String?
  user_phone       String?
  user_address     String?
  user_language    String?
  user_rating      Float?
  user_tourlocation String?
  user_rate        Int?
  user_password    String
  user_profile     String @default("/default.png")
  user_role        Role     
  bookingsAsUser   booking[] @relation("UserBookings")
  bookingsAsGuide  booking[] @relation("GuideBookings")
  reviewsAsUser    review[]  @relation("UserReviews")  // Reviews given by user
  reviewsAsGuide   review[]  @relation("GuideReviews") // Reviews received by guide
  diary            diary[]
}


model booking {
  booking_id   String   @id @default(uuid())
  booking_date String
  user_id      String
  user         user     @relation("UserBookings", fields: [user_id], references: [user_id])
  guide_id     String
  guide        user     @relation("GuideBookings", fields: [guide_id], references: [user_id])
  status       Status   @default(PENDING)
}

model diary{
  diary_id      String   @id @default(uuid())
  user_id       String
  user          user     @relation(fields: [user_id], references: [user_id])
  diary_title  String?
  diary_desc   String?
  diary_date   String?
  diary_location String?
  diary_image  String?
}

model review {
  review_id     String   @id @default(uuid())
  review_date   String?
  review_desc   String
  review_rating Float
  user_id       String
  user          user     @relation("UserReviews", fields: [user_id], references: [user_id])
  guide_id      String
  guide         user     @relation("GuideReviews", fields: [guide_id], references: [user_id])
}


enum Status{
  PENDING
  COMPLETED
  ONGOING
}


enum Role {
  USER
  ADMIN
  GUIDE
}



